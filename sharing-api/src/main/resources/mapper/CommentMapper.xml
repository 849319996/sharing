<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yn.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.yn.entity.Comment">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_date" javaType="java.util.Date" />
      <arg column="level" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="article_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="author_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="parent_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="to_uid" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, content, create_date, level, article_id, author_id, parent_id, to_uid
  </sql>

  <select id="findAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where deleted = 0
  </select>

  <select id="findByArticle" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where article_id = #{id,jdbcType=INTEGER} and deleted = 0 and level = 0
    order by create_date desc
  </select>
  
  <update id="deleteById" parameterType="java.lang.Integer">
    update comment set deleted = 1
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>